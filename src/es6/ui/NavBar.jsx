import * as React from "react";
import * as weavejs from "weavejs";
var HBox = weavejs.ui.flexbox.HBox;
var MenuBar = weavejs.ui.menu.MenuBar;
const DOCS = "Docs";
const CORE = "Core";
const DATA = "Data";
const UI = "UI";
const RESOURCES = "Resources";
const TUTORIAL = "Tutorial";
function MenuLabel(props) {
    return (<HBox padded style={{ alignItems: "center" }}>
			{props.label}
			<i className="fa fa-caret-down"/>
		</HBox>);
}
function MenuItem(props) {
    return (<button style={{ justifyContent: "center", alignItems: "center" }} className="weave-transparent-button weave-menubar-item">{props.children}</button>);
}
export default class NavBar extends React.Component {
    constructor(...args) {
        super(...args);
        this.menus = [
            {
                label: <MenuLabel label={DOCS}/>,
                menu: [
                    {
                        label: CORE,
                        click: () => this.props.onMenuItemClick(CORE)
                    },
                    {
                        label: DATA,
                        click: () => this.props.onMenuItemClick(DATA)
                    },
                    {
                        label: UI,
                        click: () => this.setState({ route: UI }),
                    }
                ]
            },
            {
                label: <MenuLabel label={RESOURCES}/>,
                menu: [
                    {
                        label: TUTORIAL,
                        click: () => this.props.onMenuItemClick(TUTORIAL),
                    }
                ]
            }
        ];
    }
    render() {
        return (<HBox className="weave-menubar" style={{ flex: 1, overflow: "visible" }}>
				<MenuItem>
					<span className="nav-logo">WeaveJS</span>
				</MenuItem>
				<MenuItem>
					Introduction
				</MenuItem>
				<MenuBar config={this.menus}/>
				<HBox style={{ flex: 1, justifyContent: "flex-end", marginRight: 100 }}>
					<MenuItem>
						GitHub
					</MenuItem>
				</HBox>
			</HBox>);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmF2QmFyLmpzeCIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3RzL3VpL05hdkJhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTztPQUN2QixLQUFLLE9BQU8sTUFBTSxTQUFTO0FBR2xDLElBQU8sSUFBSSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztBQUN0QyxJQUFPLE9BQU8sR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7QUFJekMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDO0FBQ3BCLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQztBQUNwQixNQUFNLElBQUksR0FBRyxNQUFNLENBQUM7QUFDcEIsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDO0FBQ2hCLE1BQU0sU0FBUyxHQUFHLFdBQVcsQ0FBQztBQUM5QixNQUFNLFFBQVEsR0FBRyxVQUFVLENBQUM7QUFXNUIsbUJBQW1CLEtBQW9CO0lBRXRDLE1BQU0sQ0FBQyxDQUNOLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUMxQztHQUFBLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FDWjtHQUFBLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsRUFDaEM7RUFBQSxFQUFFLElBQUksQ0FBQyxDQUNQLENBQUM7QUFDSCxDQUFDO0FBRUQsa0JBQWtCLEtBQWlDO0lBRWxELE1BQU0sQ0FBQyxDQUNOLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUMsY0FBYyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsNkNBQTZDLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQ2xKLENBQUM7QUFDSCxDQUFDO0FBRUQsb0NBQW9DLEtBQUssQ0FBQyxTQUFTO0lBQW5EO1FBQW9DLGVBQXlDO1FBRTVFLFVBQUssR0FBc0I7WUFDMUI7Z0JBQ0MsS0FBSyxFQUFFLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFTO2dCQUN2QyxJQUFJLEVBQUU7b0JBQ0w7d0JBQ0MsS0FBSyxFQUFFLElBQUk7d0JBQ1gsS0FBSyxFQUFFLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDO3FCQUM3QztvQkFDRDt3QkFDQyxLQUFLLEVBQUUsSUFBSTt3QkFDWCxLQUFLLEVBQUUsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUM7cUJBQzdDO29CQUNEO3dCQUNDLEtBQUssRUFBRSxFQUFFO3dCQUNULEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBQyxLQUFLLEVBQUUsRUFBRSxFQUFDLENBQUM7cUJBQ3ZDO2lCQUNEO2FBQ0Q7WUFDRDtnQkFDQyxLQUFLLEVBQUcsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsU0FBUyxDQUFDLEVBQVM7Z0JBQzdDLElBQUksRUFBRTtvQkFDTDt3QkFDQyxLQUFLLEVBQUUsUUFBUTt3QkFDZixLQUFLLEVBQUUsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUM7cUJBQ2pEO2lCQUNEO2FBQ0Q7U0FDRCxDQUFDO0lBcUJILENBQUM7SUFuQkEsTUFBTTtRQUVMLE1BQU0sQ0FBQyxDQUNOLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUMsQ0FBQyxDQUNyRTtJQUFBLENBQUMsUUFBUSxDQUNSO0tBQUEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUN6QztJQUFBLEVBQUUsUUFBUSxDQUNWO0lBQUEsQ0FBQyxRQUFRLENBQ1I7O0lBQ0QsRUFBRSxRQUFRLENBQ1Y7SUFBQSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQzVCO0lBQUEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLGNBQWMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLEdBQUcsRUFBQyxDQUFDLENBQ3BFO0tBQUEsQ0FBQyxRQUFRLENBQ1I7O0tBQ0QsRUFBRSxRQUFRLENBQ1g7SUFBQSxFQUFFLElBQUksQ0FDUDtHQUFBLEVBQUUsSUFBSSxDQUFDLENBQ1AsQ0FBQztJQUNILENBQUM7QUFDRixDQUFDO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIHdlYXZlanMgZnJvbSBcIndlYXZlanNcIjtcblxuaW1wb3J0IFZCb3ggPSB3ZWF2ZWpzLnVpLmZsZXhib3guVkJveDtcbmltcG9ydCBIQm94ID0gd2VhdmVqcy51aS5mbGV4Ym94LkhCb3g7XG5pbXBvcnQgTWVudUJhciA9IHdlYXZlanMudWkubWVudS5NZW51QmFyO1xuaW1wb3J0IE1lbnVCYXJJdGVtUHJvcHMgPSB3ZWF2ZWpzLnVpLm1lbnUuTWVudUJhckl0ZW1Qcm9wcztcbmltcG9ydCBDZW50ZXJlZEljb24gPSB3ZWF2ZWpzLnVpLkNlbnRlcmVkSWNvbjtcblxuY29uc3QgRE9DUyA9IFwiRG9jc1wiO1xuY29uc3QgQ09SRSA9IFwiQ29yZVwiO1xuY29uc3QgREFUQSA9IFwiRGF0YVwiO1xuY29uc3QgVUkgPSBcIlVJXCI7XG5jb25zdCBSRVNPVVJDRVMgPSBcIlJlc291cmNlc1wiO1xuY29uc3QgVFVUT1JJQUwgPSBcIlR1dG9yaWFsXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmF2QmFyUHJvcHNcbntcblx0b25NZW51SXRlbUNsaWNrOihyb3V0ZTpzdHJpbmcpPT52b2lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE5hdkJhclN0YXRlXG57XG59XG5cbmZ1bmN0aW9uIE1lbnVMYWJlbChwcm9wczp7bGFiZWw6c3RyaW5nfSlcbntcblx0cmV0dXJuIChcblx0XHQ8SEJveCBwYWRkZWQgc3R5bGU9e3thbGlnbkl0ZW1zOiBcImNlbnRlclwifX0+XG5cdFx0XHR7cHJvcHMubGFiZWx9XG5cdFx0XHQ8aSBjbGFzc05hbWU9XCJmYSBmYS1jYXJldC1kb3duXCIvPlxuXHRcdDwvSEJveD5cblx0KTtcbn1cblxuZnVuY3Rpb24gTWVudUl0ZW0ocHJvcHM6e2NoaWxkcmVuPzpSZWFjdC5SZWFjdE5vZGV9KVxue1xuXHRyZXR1cm4gKFxuXHRcdDxidXR0b24gc3R5bGU9e3tqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIiwgYWxpZ25JdGVtczogXCJjZW50ZXJcIn19IGNsYXNzTmFtZT1cIndlYXZlLXRyYW5zcGFyZW50LWJ1dHRvbiB3ZWF2ZS1tZW51YmFyLWl0ZW1cIj57cHJvcHMuY2hpbGRyZW59PC9idXR0b24+XG5cdCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5hdkJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxOYXZCYXJQcm9wcywgTmF2QmFyU3RhdGU+XG57XG5cdG1lbnVzOk1lbnVCYXJJdGVtUHJvcHNbXSA9IFtcblx0XHR7XG5cdFx0XHRsYWJlbDogPE1lbnVMYWJlbCBsYWJlbD17RE9DU30vPiBhcyBhbnksXG5cdFx0XHRtZW51OiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogQ09SRSxcblx0XHRcdFx0XHRjbGljazogKCkgPT4gdGhpcy5wcm9wcy5vbk1lbnVJdGVtQ2xpY2soQ09SRSlcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiBEQVRBLFxuXHRcdFx0XHRcdGNsaWNrOiAoKSA9PiB0aGlzLnByb3BzLm9uTWVudUl0ZW1DbGljayhEQVRBKVxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IFVJLFxuXHRcdFx0XHRcdGNsaWNrOiAoKSA9PiB0aGlzLnNldFN0YXRlKHtyb3V0ZTogVUl9KSxcblx0XHRcdFx0fVxuXHRcdFx0XVxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICA8TWVudUxhYmVsIGxhYmVsPXtSRVNPVVJDRVN9Lz4gYXMgYW55LFxuXHRcdFx0bWVudTogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IFRVVE9SSUFMLFxuXHRcdFx0XHRcdGNsaWNrOiAoKSA9PiB0aGlzLnByb3BzLm9uTWVudUl0ZW1DbGljayhUVVRPUklBTCksXG5cdFx0XHRcdH1cblx0XHRcdF1cblx0XHR9XG5cdF07XG5cblx0cmVuZGVyKClcblx0e1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8SEJveCBjbGFzc05hbWU9XCJ3ZWF2ZS1tZW51YmFyXCIgc3R5bGU9e3tmbGV4OiAxLCBvdmVyZmxvdzogXCJ2aXNpYmxlXCJ9fT5cblx0XHRcdFx0PE1lbnVJdGVtPlxuXHRcdFx0XHRcdDxzcGFuIGNsYXNzTmFtZT1cIm5hdi1sb2dvXCI+V2VhdmVKUzwvc3Bhbj5cblx0XHRcdFx0PC9NZW51SXRlbT5cblx0XHRcdFx0PE1lbnVJdGVtPlxuXHRcdFx0XHRcdEludHJvZHVjdGlvblxuXHRcdFx0XHQ8L01lbnVJdGVtPlxuXHRcdFx0XHQ8TWVudUJhciBjb25maWc9e3RoaXMubWVudXN9Lz5cblx0XHRcdFx0PEhCb3ggc3R5bGU9e3tmbGV4OiAxLCBqdXN0aWZ5Q29udGVudDogXCJmbGV4LWVuZFwiLCBtYXJnaW5SaWdodDogMTAwfX0+XG5cdFx0XHRcdFx0PE1lbnVJdGVtPlxuXHRcdFx0XHRcdFx0R2l0SHViXG5cdFx0XHRcdFx0PC9NZW51SXRlbT5cblx0XHRcdFx0PC9IQm94PlxuXHRcdFx0PC9IQm94PlxuXHRcdCk7XG5cdH1cbn1cbiJdfQ==